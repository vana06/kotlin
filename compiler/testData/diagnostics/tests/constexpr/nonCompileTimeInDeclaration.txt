package

public fun plus(/*0*/ a: kotlin.Int, /*1*/ b: kotlin.Int): kotlin.Int

@kotlin.CompileTimeCalculation public final class A {
    public constructor A(/*0*/ a: kotlin.Int)
    public final val a: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final fun inc(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class B {
    public constructor B(/*0*/ b: kotlin.Int)
    public final val b: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    @kotlin.CompileTimeCalculation public final fun get(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class c {
    @kotlin.CompileTimeCalculation public constructor c()
    public constructor c(/*0*/ c: kotlin.Int)
    public final val c: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

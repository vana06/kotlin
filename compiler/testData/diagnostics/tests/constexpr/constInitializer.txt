package

public const val a: kotlin.Int
public const val equals: kotlin.Boolean
public const val get: kotlin.Int
public const val getAFromB: kotlin.Int
public const val getB: kotlin.Int
public const val getC: kotlin.Int
public const val getCAsProperty: kotlin.Int
public const val getE: kotlin.Int = 1
public const val hashCode: kotlin.Int
public const val toString: kotlin.String
@kotlin.CompileTimeCalculation public fun getInt(): kotlin.Int

@kotlin.CompileTimeCalculation public open class A {
    public constructor A(/*0*/ a: kotlin.Int)
    public final val a: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class B : A {
    @kotlin.CompileTimeCalculation public constructor B(/*0*/ b: kotlin.Int)
    public final override /*1*/ /*fake_override*/ val a: kotlin.Int
    public final val b: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

@kotlin.CompileTimeCalculation public final class C {
    public constructor C(/*0*/ c: kotlin.Int)
    public final val c: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun get(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class D {
    @kotlin.CompileTimeCalculation public constructor D()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    @kotlin.CompileTimeCalculation public open override /*1*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class E {
    @kotlin.CompileTimeCalculation public constructor E()
    @kotlin.CompileTimeCalculation public final val e: kotlin.Int = 1
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
